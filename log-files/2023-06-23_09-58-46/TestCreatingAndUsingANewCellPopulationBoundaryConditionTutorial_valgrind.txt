==940900== Memcheck, a memory error detector
==940900== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==940900== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==940900== Command: /home/github/actions-runner/_work/Chaste/Chaste/Chaste/chaste-build-dir/cell_based/test/TestCreatingAndUsingANewCellPopulationBoundaryConditionTutorial -malloc_debug -malloc_dump -memory_info
==940900== Parent PID: 931175
==940900== 
==940900== 
==940900== FILE DESCRIPTORS: 9 open (3 std) at exit.
==940900== Open file descriptor 12:
==940900==    at 0x100B222D: pipe (pipe.c:29)
==940900==    by 0x18A6E07D: ???
==940900==    by 0x13FD14CB: orte_init (in /usr/lib/x86_64-linux-gnu/libopen-rte.so.40.30.2)
==940900==    by 0xF9BC418: ompi_mpi_init (in /usr/lib/x86_64-linux-gnu/libmpi.so.40.30.2)
==940900==    by 0xF955D7A: PMPI_Init_thread (in /usr/lib/x86_64-linux-gnu/libmpi.so.40.30.2)
==940900==    by 0xE64CD38: PetscInitialize (pinit.c:924)
==940900==    by 0xE4C11E9: PetscSetupUtils::InitialisePetsc() (PetscSetupUtils.cpp:80)
==940900==    by 0xE4C1237: PetscSetupUtils::CommonSetup() (PetscSetupUtils.cpp:88)
==940900==    by 0x1440F9: PetscSetup::setUpWorld() (FakePetscSetup.hpp:70)
==940900==    by 0x13EFF7: CxxTest::RealWorldDescription::setUp() (RealDescriptions.cpp:266)
==940900==    by 0x1416DE: CxxTest::TestRunner::runWorld() (TestRunner.h:43)
==940900==    by 0x1415DA: CxxTest::TestRunner::runAllTests(CxxTest::TestListener&) (TestRunner.h:23)
==940900==    by 0x141BED: CxxTest::ErrorFormatter::run() (ErrorFormatter.h:47)
==940900==    by 0x13D7B5: main (TestCreatingAndUsingANewCellPopulationBoundaryConditionTutorial.cpp:18)
==940900== 
==940900== Open file descriptor 8: /dev/shm/open_mpi.0000
==940900==    at 0x100B6BCC: __open_nocancel (open64_nocancel.c:39)
==940900==    by 0x1003AC4F: shm_open@@GLIBC_2.34 (shm_open.c:40)
==940900==    by 0xE4F6822: ???
==940900==    by 0xE4F696F: ???
==940900==    by 0x140786DC: ??? (in /usr/lib/x86_64-linux-gnu/libopen-pal.so.40.30.2)
==940900==    by 0x14078938: opal_shmem_base_select (in /usr/lib/x86_64-linux-gnu/libopen-pal.so.40.30.2)
==940900==    by 0x1402E922: opal_init (in /usr/lib/x86_64-linux-gnu/libopen-pal.so.40.30.2)
==940900==    by 0x13FD12DB: orte_init (in /usr/lib/x86_64-linux-gnu/libopen-rte.so.40.30.2)
==940900==    by 0xF9BC418: ompi_mpi_init (in /usr/lib/x86_64-linux-gnu/libmpi.so.40.30.2)
==940900==    by 0xF955D7A: PMPI_Init_thread (in /usr/lib/x86_64-linux-gnu/libmpi.so.40.30.2)
==940900==    by 0xE64CD38: PetscInitialize (pinit.c:924)
==940900==    by 0xE4C11E9: PetscSetupUtils::InitialisePetsc() (PetscSetupUtils.cpp:80)
==940900==    by 0xE4C1237: PetscSetupUtils::CommonSetup() (PetscSetupUtils.cpp:88)
==940900==    by 0x1440F9: PetscSetup::setUpWorld() (FakePetscSetup.hpp:70)
==940900==    by 0x13EFF7: CxxTest::RealWorldDescription::setUp() (RealDescriptions.cpp:266)
==940900==    by 0x1416DE: CxxTest::TestRunner::runWorld() (TestRunner.h:43)
==940900==    by 0x1415DA: CxxTest::TestRunner::runAllTests(CxxTest::TestListener&) (TestRunner.h:23)
==940900==    by 0x141BED: CxxTest::ErrorFormatter::run() (ErrorFormatter.h:47)
==940900==    by 0x13D7B5: main (TestCreatingAndUsingANewCellPopulationBoundaryConditionTutorial.cpp:18)
==940900== 
==940900== Open file descriptor 114:
==940900==    <inherited from parent>
==940900== 
==940900== Open file descriptor 110:
==940900==    <inherited from parent>
==940900== 
==940900== Open file descriptor 4: /home/github/actions-runner/_work/Chaste/Chaste/Chaste/chaste-build-dir/memtest/TestCreatingAndUsingANewCellPopulationBoundaryConditionTutorial_valgrind.txt
==940900==    <inherited from parent>
==940900== 
==940900== Open file descriptor 3: /home/github/actions-runner/_work/Chaste/Chaste/Chaste/chaste-build-dir/Testing/Temporary/LastTest.log.tmp
==940900==    <inherited from parent>
==940900== 
==940900== 
==940900== HEAP SUMMARY:
==940900==     in use at exit: 700,754 bytes in 9,378 blocks
==940900==   total heap usage: 428,336 allocs, 418,958 frees, 1,408,530,530 bytes allocated
==940900== 
==940900== LEAK SUMMARY:
==940900==    definitely lost: 0 bytes in 0 blocks
==940900==    indirectly lost: 0 bytes in 0 blocks
==940900==      possibly lost: 0 bytes in 0 blocks
==940900==    still reachable: 56 bytes in 3 blocks
==940900==         suppressed: 700,698 bytes in 9,375 blocks
==940900== Reachable blocks (those to which a pointer was found) are not shown.
==940900== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==940900== 
==940900== For lists of detected and suppressed errors, rerun with: -s
==940900== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 38 from 38)
